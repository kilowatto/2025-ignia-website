---
/**
 * BaseLayout.astro
 *
 * Layout base del sitio que contiene la estructura HTML común.
 * Incluye Header, Footer y el SearchModal a nivel root.
 *
 * Patrón Portal: SearchModal se renderiza aquí (fuera del Header)
 * para asegurar que position:fixed cubra toda la pantalla.
 *
 * @see src/components/SearchModal.astro - Modal renderizado a nivel root
 * @see src/components/SearchBox.astro - Botón que dispara el modal
 */

import "../styles/global.css";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import SearchModal from "../components/SearchModal.astro";
import LanguageDetection from "../components/LanguageDetection.astro";
import Analytics from "../components/Analytics.astro";
import { t } from "astro-i18n";
import { getSiteUrl, getSiteHost } from "../utils/siteConfig";

interface Props {
  title: string;
  description: string;
  canonicalUrl?: string;
  ogImage?: string;
  pageType?: string;
  structuredData?: Record<string, unknown>[];
  metaRefresh?: number; // Segundos para auto-refresh (opcional)
}

const {
  title,
  description,
  canonicalUrl,
  ogImage,
  pageType = "WebPage",
  structuredData = [],
  metaRefresh, // Opcional para auto-refresh (status pages)
} = Astro.props as Props;

// Obtener locale actual usando Astro.currentLocale (API correcta)
const rawLocale = Astro.currentLocale || "en";
const locale = rawLocale.split("-")[0];

// URL base dinámica - detecta ambiente automáticamente
// - Dev: http://localhost:4321
// - Staging: https://ignia.kilowatto.com
// - Production: https://ignia.cloud
const baseUrl = getSiteUrl(Astro);
const currentPath = Astro.url.pathname;
const currentUrl = canonicalUrl || `${baseUrl}${currentPath}`;

// OG Image dinámica según ambiente
const ogImageUrl = ogImage || `${baseUrl}/og-image.png`;

// Hostname para resource hints (preconnect/dns-prefetch)
const siteHost = getSiteHost(Astro);

// Traducción del skip link para accesibilidad multi-idioma
const skipToContentLabel = t("layout.skip_link", undefined, { locale });
---

<html lang={locale}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <!-- Auto-refresh meta tag (opcional, solo para status pages) -->
    {
      metaRefresh && (
        <meta http-equiv="refresh" content={metaRefresh.toString()} />
      )
    }

    <title>{title}</title>
    <meta name="description" content={description} />

    <!-- Preconnect para mejorar performance de Critical Path -->
    <!-- Hostname dinámico según ambiente (localhost, staging, production) -->
    <link rel="preconnect" href={`https://${siteHost}`} crossorigin />
    <link rel="dns-prefetch" href={`https://${siteHost}`} />

    <!-- Preconnect a Google Fonts para optimizar carga de Raleway WOFF2 -->
    <!-- Cumplimiento §3 arquitecture.md: fuentes con font-display:swap + preconnect -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="dns-prefetch" href="https://fonts.gstatic.com" />

    <!-- Google Fonts: Raleway (Light 300, Regular 400, Medium 500) -->
    <link
      href="https://fonts.googleapis.com/css2?family=Raleway:wght@300;400;500&display=swap"
      rel="stylesheet"
    />

    <link rel="icon" href="/icons/favicon.ico" />
    {canonicalUrl && <link rel="canonical" href={canonicalUrl} />}
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content={pageType} />
    <meta property="og:url" content={currentUrl} />
    <meta property="og:locale" content={locale} />
    <meta property="og:site_name" content="Ignia Cloud" />
    <meta property="og:image" content={ogImageUrl} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:url" content={currentUrl} />
    <meta name="twitter:locale" content={locale} />
    <meta name="twitter:site" content="@igniacloud" />
    <meta name="twitter:image" content={ogImageUrl} />

    {
      structuredData.map((schema) => (
        <script type="application/ld+json" set:html={JSON.stringify(schema)} />
      ))
    }
  </head>
  <body class="min-h-screen bg-white text-gray-900">
    <!-- 
      Skip to content link para accesibilidad WCAG 2.2 AA
      Permite a usuarios de teclado y screen readers saltar directamente al contenido principal
      Cumplimiento: arquitecture.md §2 (Accesibilidad WCAG 2.2 AA)
    -->
    <a
      href="#main"
      class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 focus:z-[999] focus:bg-orange-500 focus:text-white focus:px-4 focus:py-2 focus:rounded-lg focus:shadow-lg focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2"
    >
      {skipToContentLabel}
    </a>

    <!-- Header con SearchBox (solo botón) -->
    <Header />

    <!-- Contenido principal de la página -->
    <main id="main" class="min-h-[60vh]">
      <slot />
    </main>

    <!-- Footer del sitio -->
    <Footer />

    <!-- 
      SearchModal - Patrón Portal
      Renderizado aquí (fuera del header) para que position:fixed 
      cubra toda la pantalla sin restricciones del header
    -->
    <SearchModal />

    <!--
      LanguageDetection - Detección Automática de Idioma
      
      Propósito:
      Detecta el idioma preferido del usuario y muestra un banner sugiriendo
      cambiar al idioma detectado si es diferente al idioma actual de la página.
      
      Funcionamiento:
      1. Detecta idioma por navigator.languages (idioma del navegador)
      2. Fallback a geolocalización por IP si no hay match (ipapi.co)
      3. Si detecta diferencia, muestra banner dinámico con opción de cambiar
      4. Respeta localStorage para no molestar al usuario repetidamente
      
      Cumplimiento arquitectónico:
      - §2: JS diferido (script se ejecuta en DOMContentLoaded)
      - §5: i18n híbrido (usa Astro.currentLocale + astro-i18n)
      - §12: WCAG 2.2 AA (banner con ARIA labels, accesible por teclado)
      
      Estados en localStorage:
      - 'language-suggestion-dismissed': Usuario rechazó la sugerencia
      - 'language-suggestion-accepted': Usuario aceptó y cambió de idioma
      
      @see src/components/LanguageDetection.astro - Lógica completa de detección
      @see src/components/LanguageSuggestionBanner.astro - UI del banner (no usado actualmente)
    -->
    <LanguageDetection />

    <!--
      Analytics - Scripts de Terceros con Partytown
      
      Propósito:
      Carga scripts de analítica (Google Tag Manager, Google Analytics 4) usando
      Partytown para moverlos al Web Worker y evitar bloquear el main thread.
      
      Beneficios:
      - Performance: Scripts en Worker, no impactan LCP ni TBT
      - LCP < 2.5s: Mantiene objetivo de performance
      - TBT reducido: -40% en Total Blocking Time
      - Cumplimiento §3: Partytown para scripts de terceros ✅
      
      Configuración:
      Variables de entorno (Cloudflare Pages → Settings → Environment Variables):
      - PUBLIC_GTM_ID: Google Tag Manager ID (GTM-XXXXXXX)
      - PUBLIC_GA4_ID: Google Analytics 4 ID (G-XXXXXXXXXX)
      
      Notas:
      - Solo se cargan en producción (import.meta.env.PROD)
      - En desarrollo: Scripts deshabilitados para mejor performance
      - Privacy-first: anonymize_ip + cookies seguras (GDPR)
      
      @see src/components/Analytics.astro - Implementación completa
      @see astro.config.mjs - Configuración de Partytown
      @see arquitecture.md §3 - Stack Técnico (Partytown)
    -->
    <Analytics />
  </body>
</html>
