---
/**
 * SearchBox.astro
 *
 * Componente minimalista que renderiza √∫nicamente el bot√≥n de b√∫squeda (lupa).
 * Se renderiza dentro del Header pero NO contiene el modal.
 *
 * Patr√≥n: Portal Pattern - El bot√≥n vive en el header, el modal vive en BaseLayout
 *
 * Comunicaci√≥n: Al hacer click, dispara un evento personalizado 'open-search-modal'
 * que es escuchado por SearchModal.astro renderizado a nivel root.
 *
 * Ventaja: Separaci√≥n clara de responsabilidades y posicionamiento correcto del modal
 *
 * Arquitectura: Minimalista, siguiendo arquitecture.md
 * @see src/components/SearchModal.astro - Modal que este bot√≥n controla
 */

import { t } from "astro-i18n";

// Obtener locale actual de forma robusta
const rawLocale = Astro.currentLocale || "en";
const locale = rawLocale.split("-")[0];
---

<!-- 
  Bot√≥n de lupa - Solo el trigger, NO el modal
  El modal vive en SearchModal.astro a nivel root del body
-->
<button
  id="search-toggle"
  class="flex items-center justify-center p-2 text-secondary hover:text-primary transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 rounded-lg"
  aria-label={t("search.aria_label", undefined, { locale })}
  type="button"
>
  <!-- Icono SVG de lupa -->
  <svg
    class="w-6 h-6"
    fill="none"
    stroke="currentColor"
    viewBox="0 0 24 24"
    aria-hidden="true"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
  </svg>
</button>

<script>
  /**
   * Script del SearchBox (solo bot√≥n)
   *
   * Funcionalidad:
   * - Escucha click en el bot√≥n de lupa
   * - Dispara evento personalizado 'open-search-modal'
   * - El evento es capturado por SearchModal.astro que maneja el modal
   *
   * Patr√≥n: Event-driven communication (Portal Pattern)
   * JS m√≠nimo: Solo lo necesario para disparar el evento
   */

  document.addEventListener("DOMContentLoaded", () => {
    // Referencia al bot√≥n de b√∫squeda
    const searchToggle = document.getElementById("search-toggle");

    // Validaci√≥n de elemento cr√≠tico
    if (!searchToggle) {
      console.error("‚ùå SearchBox: bot√≥n de b√∫squeda no encontrado");
      return;
    }

    console.log("‚úÖ SearchBox (bot√≥n) inicializado correctamente");

    /**
     * Event Listener: Click en bot√≥n de lupa
     * Dispara evento personalizado que ser√° escuchado por SearchModal
     */
    searchToggle.addEventListener("click", () => {
      console.log("üîç Click en lupa detectado - disparando evento");

      // Crear y disparar evento personalizado
      const event = new CustomEvent("open-search-modal", {
        bubbles: true, // El evento sube por el DOM tree
        cancelable: true,
      });

      document.dispatchEvent(event);
      console.log("üì° Evento 'open-search-modal' disparado");
    });

    console.log("üîç Event listener del SearchBox configurado");
  });
</script>
